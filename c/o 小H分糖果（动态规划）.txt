#include <stdio.h>
#include <stdlib.h>

int Lx(int *v, int n) {
    int *dp = (int *)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        dp[i] = 1;
    }

    for (int i = 1; i < n; i++) {
        if (v[i] > v[i - 1]) {
            dp[i] = dp[i - 1] + 1;
        }
    }

    for (int i = n - 2; i >= 0; i--) {
        if (v[i] > v[i + 1]) {
            dp[i] = dp[i + 1] + 1;
        }
    }

    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += dp[i];
    }

    free(dp);
    return sum;
}

int main() {
    int n;
    scanf("%d", &n);
    int *v = (int *)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        scanf("%d", &v[i]);
    }

    int res = Lx(v, n);
    printf("%d\n", res);

    free(v);

    return 0;
}